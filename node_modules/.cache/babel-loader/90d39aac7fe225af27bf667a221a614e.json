{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Jaskaran\\\\Downloads\\\\demo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Jaskaran\\\\Downloads\\\\demo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Jaskaran\\\\Downloads\\\\demo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { fetchItems, deleteItem as _deleteItem, createItem, editItem as _editItem } from \"../Services/api\";\nimport { routerRedux } from \"dva/router\";\nimport pathToRegExp from 'path-to-regexp';\nexport default {\n  namespace: \"posts\",\n  state: {\n    items: []\n  },\n  reducers: {\n    saveItems: function saveItems(state, _ref) {\n      var payload = _ref.payload;\n      return _objectSpread({}, state, {\n        items: payload,\n        logging: true\n      });\n    },\n    delItem: function delItem(state, _ref2) {\n      var payload = _ref2.payload;\n      var previousState = state.items;\n      var newState = previousState.filter(function (item) {\n        return item.id !== payload;\n      });\n      return _objectSpread({}, state, {\n        items: newState\n      });\n    },\n    createPost: function createPost(state, _ref3) {\n      var payload = _ref3.payload;\n      //Since fake api returns the id as 101 always\n      var item = {\n        userId: payload.userId,\n        id: state.items.length + 1,\n        title: payload.title\n      };\n\n      var newStateItems = _toConsumableArray(state.items);\n\n      newStateItems[state.items.length] = item;\n      console.log(newStateItems);\n      return _objectSpread({}, state, {\n        items: newStateItems\n      });\n    },\n    editPost: function editPost(state, _ref4) {\n      var payload = _ref4.payload;\n      console.log(payload);\n      var id = payload.id;\n\n      var newStateItems = _toConsumableArray(state.items);\n\n      var index = newStateItems.findIndex(function (item) {\n        return item.id === id;\n      });\n      newStateItems[index] = payload;\n      return _objectSpread({}, state, {\n        items: newStateItems\n      });\n    }\n  },\n  effects: {\n    getItems:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getItems(action, _ref5) {\n      var call, put, items;\n      return _regeneratorRuntime.wrap(function getItems$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              call = _ref5.call, put = _ref5.put;\n              _context.next = 3;\n              return call(fetchItems);\n\n            case 3:\n              items = _context.sent;\n              _context.next = 6;\n              return put({\n                type: \"saveItems\",\n                payload: items.data\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getItems);\n    }),\n    deleteItem:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function deleteItem(_ref6, _ref7) {\n      var payload, call, put;\n      return _regeneratorRuntime.wrap(function deleteItem$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              payload = _ref6.payload;\n              call = _ref7.call, put = _ref7.put;\n              call(_deleteItem);\n              _context2.next = 5;\n              return put({\n                type: \"delItem\",\n                payload: payload\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, deleteItem);\n    }),\n    postItem:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function postItem(_ref8, _ref9) {\n      var payload, call, put, _ref10, data;\n\n      return _regeneratorRuntime.wrap(function postItem$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              payload = _ref8.payload;\n              call = _ref9.call, put = _ref9.put;\n              _context3.next = 4;\n              return call(createItem, payload);\n\n            case 4:\n              _ref10 = _context3.sent;\n              data = _ref10.data;\n\n              if (!data) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 9;\n              return put({\n                type: \"createPost\",\n                payload: data\n              });\n\n            case 9:\n              _context3.next = 11;\n              return put(routerRedux.push('/'));\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, postItem);\n    }),\n    editItem:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function editItem(_ref11, _ref12) {\n      var payload, call, put, _ref13, data, combinedData;\n\n      return _regeneratorRuntime.wrap(function editItem$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              payload = _ref11.payload;\n              call = _ref12.call, put = _ref12.put;\n              _context4.next = 4;\n              return call(_editItem, payload);\n\n            case 4:\n              _ref13 = _context4.sent;\n              data = _ref13.data;\n              console.log();\n              combinedData = {\n                id: payload.id,\n                userId: data.userId,\n                title: data.title\n              };\n\n              if (!data) {\n                _context4.next = 13;\n                break;\n              }\n\n              _context4.next = 11;\n              return put({\n                type: \"editPost\",\n                payload: combinedData\n              });\n\n            case 11:\n              _context4.next = 13;\n              return put(routerRedux.push('/'));\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, editItem);\n    })\n  },\n  //every time it visits executions starts from history.listem acting as listener function.\n  subscriptions: {\n    setup: function setup(_ref14) {\n      var history = _ref14.history,\n          dispatch = _ref14.dispatch;\n      var locate = false;\n      history.listen(function (location) {\n        if (pathToRegExp('/').exec(location.pathname)) {\n          if (!locate) {\n            dispatch({\n              type: 'getItems'\n            });\n            locate = true;\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:\\Users\\Jaskaran\\Downloads\\demo-app\\src\\models\\posts.js"],"names":["fetchItems","deleteItem","createItem","editItem","routerRedux","pathToRegExp","namespace","state","items","reducers","saveItems","payload","logging","delItem","previousState","newState","filter","item","id","createPost","userId","length","title","newStateItems","console","log","editPost","index","findIndex","effects","getItems","action","call","put","type","data","postItem","push","combinedData","subscriptions","setup","history","dispatch","locate","listen","location","exec","pathname"],"mappings":"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","sourcesContent":["import { fetchItems,deleteItem,createItem,editItem } from \"../Services/api\";\r\nimport {routerRedux} from \"dva/router\";\r\nimport pathToRegExp from 'path-to-regexp';\r\nexport default {\r\n  namespace: \"posts\",\r\n  state: {\r\n    items:[]\r\n  },\r\n  reducers: {\r\n    saveItems(state, { payload }) {\r\n      return { ...state, items:payload,logging:true };\r\n    },\r\n    delItem(state,{payload})\r\n    {\r\n      const previousState = state.items;\r\n      var newState = previousState.filter((item)=>item.id!==payload);\r\n      return {...state,items:newState};\r\n    },\r\n    createPost(state,{payload}){\r\n      //Since fake api returns the id as 101 always\r\n      const item = {userId:payload.userId,id:state.items.length+1,title:payload.title};\r\n      const newStateItems = [...state.items];\r\n      newStateItems[state.items.length] = item;\r\n      console.log(newStateItems);\r\n      return{...state,items:newStateItems};\r\n    },\r\n    editPost(state,{payload}){\r\n      console.log(payload);\r\n      const {id} = payload;\r\n      const newStateItems = [...state.items];\r\n      const index = newStateItems.findIndex(item=>item.id===id);\r\n      newStateItems[index] = payload;\r\n      return{...state,items:newStateItems};\r\n    }\r\n  },\r\n  effects: {\r\n    *getItems(action, { call, put }) {\r\n      const items = yield call(fetchItems);\r\n      yield put({ type: \"saveItems\", payload: items.data });\r\n    },\r\n\r\n    *deleteItem({payload},{call,put}){\r\n      call(deleteItem);\r\n      yield put({type:\"delItem\",payload:payload})\r\n    },\r\n\r\n    *postItem({payload},{call,put}){\r\n      const {data} = yield call(createItem,payload);\r\n     \r\n      if(data)\r\n      {\r\n        yield put({type:\"createPost\",payload:data});\r\n        yield put(routerRedux.push('/'));\r\n      }\r\n    },\r\n\r\n    *editItem({payload},{call,put}){\r\n      const {data} = yield call(editItem,payload);\r\n      console.log();\r\n      const combinedData = {id:payload.id,userId:data.userId,title:data.title}\r\n      if(data)\r\n      {\r\n        yield put({type:\"editPost\",payload:combinedData});\r\n        yield put(routerRedux.push('/'));\r\n      }\r\n    }\r\n  },\r\n\r\n  //every time it visits executions starts from history.listem acting as listener function.\r\n  subscriptions: {\r\n    setup: function ({history, dispatch}) {\r\n      let locate = false;\r\n        history.listen(location => {\r\n            if (pathToRegExp('/').exec(location.pathname)) {\r\n              if(!locate){\r\n                dispatch({\r\n                  type: 'getItems',\r\n              });\r\n              locate =true;\r\n              } \r\n            }\r\n        });\r\n    }\r\n}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}