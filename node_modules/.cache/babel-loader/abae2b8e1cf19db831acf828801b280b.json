{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Jaskaran\\\\Downloads\\\\demo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Jaskaran\\\\Downloads\\\\demo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Jaskaran\\\\Downloads\\\\demo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { fetchItems, deleteItem as _deleteItem, createItem, editItem as _editItem } from \"../Services/api\";\nimport { routerRedux } from \"dva/router\";\nimport pathToRegExp from 'path-to-regexp';\nexport default {\n  namespace: \"posts\",\n  state: {\n    items: []\n  },\n  reducers: {\n    saveItems: function saveItems(state, _ref) {\n      var payload = _ref.payload;\n      return _objectSpread({}, state, {\n        items: payload\n      });\n    },\n    delItem: function delItem(state, _ref2) {\n      var payload = _ref2.payload;\n      var previousState = state.items;\n      var newState = previousState.filter(function (item) {\n        return item.id !== payload;\n      });\n      return _objectSpread({}, state, {\n        items: newState\n      });\n    },\n    createPost: function createPost(state, _ref3) {\n      var payload = _ref3.payload;\n      //Since fake api returns the id as 101 always\n      var item = {\n        userId: payload.userId,\n        id: state.items.length,\n        title: payload.title\n      };\n\n      var newStateItems = _toConsumableArray(state.items);\n\n      newStateItems.unshift(item); //newStateItems[state.items.length] = payload;\n\n      console.log(newStateItems);\n      return _objectSpread({}, state, {\n        items: newStateItems\n      });\n    },\n    editPost: function editPost(state, _ref4) {\n      var payload = _ref4.payload;\n      var id = payload.id;\n\n      var newStateItems = _toConsumableArray(state.items);\n\n      newStateItems[id - 1] = payload;\n      return _objectSpread({}, state, {\n        items: newStateItems\n      });\n    }\n  },\n  effects: {\n    getItems:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getItems(action, _ref5) {\n      var call, put, items;\n      return _regeneratorRuntime.wrap(function getItems$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              call = _ref5.call, put = _ref5.put;\n              _context.next = 3;\n              return call(fetchItems);\n\n            case 3:\n              items = _context.sent;\n              _context.next = 6;\n              return put({\n                type: \"saveItems\",\n                payload: items.data\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getItems);\n    }),\n    deleteItem:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function deleteItem(_ref6, _ref7) {\n      var payload, call, put;\n      return _regeneratorRuntime.wrap(function deleteItem$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              payload = _ref6.payload;\n              call = _ref7.call, put = _ref7.put;\n              call(_deleteItem);\n              _context2.next = 5;\n              return put({\n                type: \"delItem\",\n                payload: payload\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, deleteItem);\n    }),\n    postItem:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function postItem(_ref8, _ref9) {\n      var payload, call, put, UserId, title, _ref10, data;\n\n      return _regeneratorRuntime.wrap(function postItem$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              payload = _ref8.payload;\n              call = _ref9.call, put = _ref9.put;\n              UserId = payload.UserId, title = payload.title;\n              _context3.next = 5;\n              return call(createItem, {\n                UserId: UserId,\n                title: title\n              });\n\n            case 5:\n              _ref10 = _context3.sent;\n              data = _ref10.data;\n\n              if (!data) {\n                _context3.next = 12;\n                break;\n              }\n\n              _context3.next = 10;\n              return put({\n                type: \"createPost\",\n                payload: data\n              });\n\n            case 10:\n              _context3.next = 12;\n              return put(routerRedux.push('/'));\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, postItem);\n    }),\n    editItem:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function editItem(_ref11, _ref12) {\n      var payload, call, put, _ref13, data;\n\n      return _regeneratorRuntime.wrap(function editItem$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              payload = _ref11.payload;\n              call = _ref12.call, put = _ref12.put;\n              _context4.next = 4;\n              return call(_editItem, payload);\n\n            case 4:\n              _ref13 = _context4.sent;\n              data = _ref13.data;\n\n              if (!data) {\n                _context4.next = 11;\n                break;\n              }\n\n              _context4.next = 9;\n              return put({\n                type: \"editPost\",\n                payload: data\n              });\n\n            case 9:\n              _context4.next = 11;\n              return put(routerRedux.push('/'));\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, editItem);\n    })\n  },\n  //every time it visits executions starts from history.listem acting as listener function.\n  subscriptions: {\n    setup: function setup(_ref14) {\n      var history = _ref14.history,\n          dispatch = _ref14.dispatch;\n      var locate = false;\n      history.listen(function (location) {\n        if (pathToRegExp('/').exec(location.pathname)) {\n          if (!locate) {\n            dispatch({\n              type: 'getItems'\n            });\n            locate = true;\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:\\Users\\Jaskaran\\Downloads\\demo-app\\src\\models\\posts.js"],"names":["fetchItems","deleteItem","createItem","editItem","routerRedux","pathToRegExp","namespace","state","items","reducers","saveItems","payload","delItem","previousState","newState","filter","item","id","createPost","userId","length","title","newStateItems","unshift","console","log","editPost","effects","getItems","action","call","put","type","data","postItem","UserId","push","subscriptions","setup","history","dispatch","locate","listen","location","exec","pathname"],"mappings":"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","sourcesContent":["import { fetchItems,deleteItem,createItem,editItem } from \"../Services/api\";\r\nimport {routerRedux} from \"dva/router\";\r\nimport pathToRegExp from 'path-to-regexp';\r\nexport default {\r\n  namespace: \"posts\",\r\n  state: {\r\n    items:[]\r\n  },\r\n  reducers: {\r\n    saveItems(state, { payload }) {\r\n      return { ...state, items:payload };\r\n    },\r\n    delItem(state,{payload})\r\n    {\r\n      const previousState = state.items;\r\n      var newState = previousState.filter((item)=>item.id!==payload);\r\n      return {...state,items:newState};\r\n    },\r\n    createPost(state,{payload}){\r\n      //Since fake api returns the id as 101 always\r\n      const item = {userId:payload.userId,id:state.items.length,title:payload.title};\r\n      const newStateItems = [...state.items];\r\n      newStateItems.unshift(item);\r\n      //newStateItems[state.items.length] = payload;\r\n      console.log(newStateItems);\r\n      return{...state,items:newStateItems};\r\n    },\r\n    editPost(state,{payload}){\r\n      const {id} = payload;\r\n      const newStateItems = [...state.items];\r\n      newStateItems[id-1] = payload;\r\n      return{...state,items:newStateItems};\r\n    }\r\n  },\r\n  effects: {\r\n    *getItems(action, { call, put }) {\r\n      const items = yield call(fetchItems);\r\n      yield put({ type: \"saveItems\", payload: items.data });\r\n    },\r\n\r\n    *deleteItem({payload},{call,put}){\r\n      call(deleteItem);\r\n      yield put({type:\"delItem\",payload:payload})\r\n    },\r\n\r\n    *postItem({payload},{call,put}){\r\n      const {UserId,title} = payload;\r\n      const {data} = yield call(createItem,{UserId,title});\r\n      if(data)\r\n      {\r\n        yield put({type:\"createPost\",payload:data});\r\n        yield put(routerRedux.push('/'));\r\n      }\r\n    },\r\n\r\n    *editItem({payload},{call,put}){\r\n      const {data} = yield call(editItem,payload);\r\n      if(data)\r\n      {\r\n        yield put({type:\"editPost\",payload:data});\r\n        yield put(routerRedux.push('/'));\r\n      }\r\n    }\r\n  },\r\n\r\n  //every time it visits executions starts from history.listem acting as listener function.\r\n  subscriptions: {\r\n    setup: function ({history, dispatch}) {\r\n      let locate = false;\r\n        history.listen(location => {\r\n            if (pathToRegExp('/').exec(location.pathname)) {\r\n              if(!locate){\r\n                dispatch({\r\n                  type: 'getItems',\r\n              });\r\n              locate =true;\r\n              } \r\n            }\r\n        });\r\n    }\r\n}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}