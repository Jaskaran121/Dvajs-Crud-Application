{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Jaskaran\\\\Downloads\\\\demo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\Jaskaran\\\\Downloads\\\\demo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { fetchItems, deleteItem as _deleteItem, createItem } from \"../Services/api\";\nexport default {\n  namespace: \"posts\",\n  state: {\n    items: []\n  },\n  reducers: {\n    saveItems: function saveItems(state, _ref) {\n      var payload = _ref.payload;\n      return _objectSpread({}, state, {\n        items: payload\n      });\n    },\n    delItem: function delItem(state, _ref2) {\n      var payload = _ref2.payload;\n      var previousState = state.items;\n      var newState = previousState.filter(function (item) {\n        return item.id !== payload;\n      });\n      return _objectSpread({}, state, {\n        items: newState\n      });\n    },\n    createPost: function createPost(state, _ref3) {\n      var payload = _ref3.payload;\n      return null;\n    }\n  },\n  effects: {\n    getItems:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getItems(action, _ref4) {\n      var call, put, items;\n      return _regeneratorRuntime.wrap(function getItems$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              call = _ref4.call, put = _ref4.put;\n              _context.next = 3;\n              return call(fetchItems);\n\n            case 3:\n              items = _context.sent;\n              _context.next = 6;\n              return put({\n                type: \"saveItems\",\n                payload: items.data\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getItems);\n    }),\n    deleteItem:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function deleteItem(_ref5, _ref6) {\n      var payload, call, put, item;\n      return _regeneratorRuntime.wrap(function deleteItem$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              payload = _ref5.payload;\n              call = _ref6.call, put = _ref6.put;\n              item = call(_deleteItem);\n              _context2.next = 5;\n              return put({\n                type: \"delItem\",\n                payload: payload\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, deleteItem);\n    }),\n    postItem:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function postItem(_ref7, _ref8) {\n      var payload, call, put, UserId, title, item;\n      return _regeneratorRuntime.wrap(function postItem$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              payload = _ref7.payload;\n              call = _ref8.call, put = _ref8.put;\n              UserId = payload.UserId, title = payload.title;\n              item = call(createItem, function () {\n                UserId, title;\n              });\n              _context3.next = 6;\n              return put({\n                type: \"createPost\",\n                payload: item\n              });\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, postItem);\n    })\n  },\n  subscriptions: {}\n};","map":{"version":3,"sources":["C:\\Users\\Jaskaran\\Downloads\\demo-app\\src\\models\\posts.js"],"names":["fetchItems","deleteItem","createItem","namespace","state","items","reducers","saveItems","payload","delItem","previousState","newState","filter","item","id","createPost","effects","getItems","action","call","put","type","data","postItem","UserId","title","subscriptions"],"mappings":";;AAAA,SAASA,UAAT,EAAoBC,UAAU,IAAVA,WAApB,EAA+BC,UAA/B,QAAiD,iBAAjD;AAEA,eAAe;AACbC,EAAAA,SAAS,EAAE,OADE;AAEbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAC;AADD,GAFM;AAKbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SADQ,qBACEH,KADF,QACsB;AAAA,UAAXI,OAAW,QAAXA,OAAW;AAC5B,+BAAYJ,KAAZ;AAAmBC,QAAAA,KAAK,EAACG;AAAzB;AACD,KAHO;AAIRC,IAAAA,OAJQ,mBAIAL,KAJA,SAKR;AAAA,UADeI,OACf,SADeA,OACf;AACE,UAAME,aAAa,GAAGN,KAAK,CAACC,KAA5B;AACA,UAAIM,QAAQ,GAAGD,aAAa,CAACE,MAAd,CAAqB,UAACC,IAAD;AAAA,eAAQA,IAAI,CAACC,EAAL,KAAUN,OAAlB;AAAA,OAArB,CAAf;AACA,+BAAWJ,KAAX;AAAiBC,QAAAA,KAAK,EAACM;AAAvB;AACD,KATO;AAURI,IAAAA,UAVQ,sBAUGX,KAVH,SAUmB;AAAA,UAATI,OAAS,SAATA,OAAS;AACzB,aAAO,IAAP;AACD;AAZO,GALG;AAmBbQ,EAAAA,OAAO,EAAE;AACNC,IAAAA,QADM;AAAA;AAAA,+CACGC,MADH;AAAA;AAAA;AAAA;AAAA;AAAA;AACaC,cAAAA,IADb,SACaA,IADb,EACmBC,GADnB,SACmBA,GADnB;AAAA;AAES,qBAAMD,IAAI,CAACnB,UAAD,CAAV;;AAFT;AAECK,cAAAA,KAFD;AAAA;AAGL,qBAAMe,GAAG,CAAC;AAAEC,gBAAAA,IAAI,EAAE,WAAR;AAAqBb,gBAAAA,OAAO,EAAEH,KAAK,CAACiB;AAApC,eAAD,CAAT;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMNrB,IAAAA,UANM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMMO,cAAAA,OANN,SAMMA,OANN;AAMgBW,cAAAA,IANhB,SAMgBA,IANhB,EAMqBC,GANrB,SAMqBA,GANrB;AAOCP,cAAAA,IAPD,GAOQM,IAAI,CAAClB,WAAD,CAPZ;AAAA;AAQL,qBAAMmB,GAAG,CAAC;AAACC,gBAAAA,IAAI,EAAC,SAAN;AAAgBb,gBAAAA,OAAO,EAACA;AAAxB,eAAD,CAAT;;AARK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWNe,IAAAA,QAXM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWIf,cAAAA,OAXJ,SAWIA,OAXJ;AAWcW,cAAAA,IAXd,SAWcA,IAXd,EAWmBC,GAXnB,SAWmBA,GAXnB;AAYGI,cAAAA,MAZH,GAYmBhB,OAZnB,CAYGgB,MAZH,EAYUC,KAZV,GAYmBjB,OAZnB,CAYUiB,KAZV;AAaCZ,cAAAA,IAbD,GAaQM,IAAI,CAACjB,UAAD,EAAY,YAAI;AAACsB,gBAAAA,MAAM,EAACC,KAAP;AAAa,eAA9B,CAbZ;AAAA;AAcL,qBAAML,GAAG,CAAC;AAACC,gBAAAA,IAAI,EAAC,YAAN;AAAmBb,gBAAAA,OAAO,EAACK;AAA3B,eAAD,CAAT;;AAdK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAnBI;AAoCba,EAAAA,aAAa,EAAE;AApCF,CAAf","sourcesContent":["import { fetchItems,deleteItem,createItem } from \"../Services/api\";\r\n\r\nexport default {\r\n  namespace: \"posts\",\r\n  state: {\r\n    items:[]\r\n  },\r\n  reducers: {\r\n    saveItems(state, { payload }) {\r\n      return { ...state, items:payload };\r\n    },\r\n    delItem(state,{payload})\r\n    {\r\n      const previousState = state.items;\r\n      var newState = previousState.filter((item)=>item.id!==payload);\r\n      return {...state,items:newState};\r\n    },\r\n    createPost(state,{payload}){\r\n      return null;\r\n    }\r\n  },\r\n  effects: {\r\n    *getItems(action, { call, put }) {\r\n      const items = yield call(fetchItems);\r\n      yield put({ type: \"saveItems\", payload: items.data });\r\n    },\r\n\r\n    *deleteItem({payload},{call,put}){\r\n      const item = call(deleteItem);\r\n      yield put({type:\"delItem\",payload:payload})\r\n    },\r\n\r\n    *postItem({payload},{call,put}){\r\n      const { UserId,title} = payload;\r\n      const item = call(createItem,()=>{UserId,title});\r\n      yield put({type:\"createPost\",payload:item});\r\n    }\r\n  },\r\n  subscriptions: {\r\n    \r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}