{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Jaskaran\\\\Downloads\\\\demo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Jaskaran\\\\Downloads\\\\demo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jaskaran\\\\Downloads\\\\demo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jaskaran\\\\Downloads\\\\demo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jaskaran\\\\Downloads\\\\demo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jaskaran\\\\Downloads\\\\demo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jaskaran\\\\Downloads\\\\demo-app\\\\src\\\\Components\\\\edit.js\";\nimport React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Form, Input, Button } from \"antd\";\nimport { connect } from \"dva\";\nimport { routerRedux } from \"dva/router\";\n\nvar EditForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditForm, _React$Component);\n\n  function EditForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault(); //console.log(this.props.location.state.item);\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        var id = _this.props.location.state.item.id;\n\n        var item = _objectSpread({\n          id: id\n        }, values);\n\n        if (!err) {\n          //console.log(\"Received values of form: \", item);\n          _this.props.dispatch({\n            type: \"posts/editItem\",\n            payload: item\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EditForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkAuth();\n    }\n  }, {\n    key: \"checkAuth\",\n    value: function checkAuth() {\n      var history = this.props.history;\n      console.log(routerRedux.goBack());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 20\n          },\n          sm: {\n            span: 4\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 20,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      var _this$props$location$ = this.props.location.state.item,\n          userId = _this$props$location$.userId,\n          title = _this$props$location$.title;\n      return React.createElement(Form, Object.assign({}, formItemLayout, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"UserId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, getFieldDecorator(\"UserId\", {\n        initialValue: userId,\n        rules: [{\n          required: true,\n          message: \"Please input a UserID\"\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, getFieldDecorator(\"title\", {\n        initialValue: title,\n        rules: [{\n          required: true,\n          message: \"Please input a title!\",\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Edit\")));\n    }\n  }]);\n\n  return EditForm;\n}(React.Component);\n\nvar WrappedFormEdit = Form.create({\n  name: \"register\"\n})(EditForm);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    postItem: state.posts.editItem,\n    logging: state.posts.logging\n  };\n};\n\nexport default connect(mapStateToProps)(WrappedFormEdit);","map":{"version":3,"sources":["C:\\Users\\Jaskaran\\Downloads\\demo-app\\src\\Components\\edit.js"],"names":["React","Form","Input","Button","connect","routerRedux","EditForm","state","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","id","location","item","dispatch","type","payload","checkAuth","history","console","log","goBack","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","userId","title","initialValue","rules","required","message","whitespace","Component","WrappedFormEdit","create","name","mapStateToProps","postItem","posts","editItem","logging"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { connect } from \"dva\";\r\nimport {routerRedux} from \"dva/router\";\r\nclass EditForm extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount(){\r\n    this.checkAuth();\r\n  }\r\n\r\n  checkAuth(){\r\n    const {history} = this.props;\r\n    console.log(routerRedux.goBack());\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    //console.log(this.props.location.state.item);\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n        const id = this.props.location.state.item.id;\r\n       const item = {id,...values};\r\n      if (!err) {\r\n      //console.log(\"Received values of form: \", item);\r\n       this.props.dispatch({type:\"posts/editItem\",payload:item});\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 20 },\r\n        sm: { span: 4\r\n          \r\n         }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 20,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8\r\n        }\r\n      }\r\n    };\r\n    const {userId,title} = this.props.location.state.item;\r\n    return (\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"UserId\">\r\n          {getFieldDecorator(\"UserId\", {\r\n            initialValue: userId,\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input a UserID\"\r\n              }\r\n            ]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Title\">\r\n          {getFieldDecorator(\"title\", {\r\n            initialValue: title,\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input a title!\",\r\n                whitespace: true\r\n              }\r\n            ]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Edit\r\n          </Button> \r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedFormEdit = Form.create({ name: \"register\" })(\r\n  EditForm\r\n);\r\n\r\nconst mapStateToProps = state =>{\r\n  return{\r\n    postItem:state.posts.editItem,\r\n    logging:state.posts.logging\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(WrappedFormEdit);\r\n"]},"metadata":{},"sourceType":"module"}